
public class Questions {

    private static String readUrl(String query) throws IOException {

        URL url = new URL(query);
        BufferedReader in = new BufferedReader(new InputStreamReader(new GZIPInputStream(url.openStream())));
        String line;
        StringBuffer content = new StringBuffer();
        while ((line = in.readLine()) != null) {
            content.append(line);
        }
        return String.valueOf(content);
    }

    static class Item {

        class Owner{
            String user_id;
        }
        Owner owner;

        String question_id;


    }

    static class Page {
        List<Item> items;
    }

    class Users {
        List<User> items;
    }
    static class User{
        String location;
    }

    public static void main(String[] args) throws IOException {

        int count = 0;


        List<String> statesList = new ArrayList<String>();                      //Create a list of USA states
        String[] states = {"AK", "AL", "AR", "AZ", "CA", "CO", "CT", "DC",
                "DE", "FL", "GA", "GU", "HI", "IA", "ID", "IL", "IN", "KS",
                "KY", "LA", "MA", "MD", "ME", "MH", "MI", "MN", "MO", "MS", "MT",
                "NC", "ND", "NE", "NH", "NJ", "NM", "NV", "NY", "OH", "OK", "OR",
                "PA", "PR", "PW", "RI", "SC", "SD", "TN", "TX", "UT", "VA", "VI",
                "VT", "WA", "WI", "WV", "WY", "Massachusetts", "Seattle", "California", "Hampshire","Miami", "USA","Hill","Denver", "Florida","Dc", "Carolina",
                "York", "Georgia", "Virginia", "Francisco", "City", "Connecticut","Wisconsin","Jersey", "State","Fenwick", "Michigan", "Milliways"};
        for (int i = 0; i < states.length; i++) {
            statesList.add(states[i]);
        }

        for (int i = 1; i < 10; i++) {
            String pageNo = "page=";
            pageNo = pageNo+i;
            //String query = "https://api.stackexchange.com/2.2/questions?pagesize=10&order=desc&min=200&sort=votes&site=stackoverflow&filter=!2.dt38CU)6yRIbWVfDpQc&key=YOsp)YsweXtZMdqoUDFv6w((";
            String query = "https://api.stackexchange.com/2.2/questions?" + pageNo + "&pagesize=100&order=desc&min=100&sort=votes&site=stackoverflow&filter=!g9V1zw-7RMXL9)e7mhQqd-p*e7SeJTNp.go&key=YOsp)YsweXtZMdqoUDFv6w((";

            String json = readUrl(query);
            Page page = new Gson().fromJson(json, Page.class);

            PrintWriter pw = new PrintWriter(new File("Question_IDs.csv"));
            PrintWriter pw2 = new PrintWriter(new File("Question_Owner_Location.csv"));
            StringBuilder sb = new StringBuilder();
            StringBuilder sb2 = new StringBuilder();

            String s = "";
            String s2 = "";

            for (Item item : page.items) {
                s = s + item.question_id + ";";
            }

            sb.append(s);
            pw.write(sb.toString());
            pw.close();


            String output = "";
            for (Item item : page.items) {
                if (item.owner.user_id != null) {
                    String queryUser = "https://api.stackexchange.com/2.2/users/" + item.owner.user_id + "?order=desc&sort=reputation&site=stackoverflow&filter=!23IkMbZQw76oILMeqALl.&key=YOsp)YsweXtZMdqoUDFv6w((";

                    String jsonUser = readUrl(queryUser);
                    Users users = new Gson().fromJson(jsonUser, Users.class);

                    output = users.items.get(0).location;

                    if (output == null) {
                        output = "null";
                    }

                    output = output.substring(output.lastIndexOf(" ") + 1);

                    for (String str : statesList) {  // change state names to States (USA)
                        if (str.trim().contains(output))
                            output = "States";
                    }

                    System.out.println(output);

                    sb2.append(output);
                    sb2.append(";");
                    count++;
                }

            }
            pw2.write(sb2.toString());
            pw2.close();


            System.out.println("Done");


        }
        System.out.println("Done");
        System.out.println("Count: " + count);
    }
}
